// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")

    // Do not use foreign keys (PlanetScale does not support them)
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

enum UserRole {
    User
    Moderator
    Admin
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    role          UserRole @default(User)
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Globals {
    id String @id @default(cuid())
    ygoProDbVersion String
    ygoProDbLastUpdate DateTime
    lastDbUpdate DateTime
}

model Card {
    id String @id @default(cuid())
    passcode Int
    name String
    type String
    frameType String
    desc String
    atk Int @default(0)
    def Int @default(0)
    level Int @default(0)
    race String
    attribute String
    scale Int @default(0)
    archetype String @default("none")
    linkval Int @default(0)
    banTcg String @default("unlimited")
    banOcg String @default("unlimited")
    linkmarkers String?
    prices CardPrices[]
    sets CardSets[]
    images CardImages[]
}

model CardSets {
    id String @id @default(cuid())
    setName String
    setCode String
    setRarity String
    setRarityCode String
    setPrice Decimal

    cardId String
    card Card @relation(fields: [cardId], references: [id], onDelete: Cascade)
    @@index([cardId])
}

model CardPrices {
    id String @id @default(cuid())
    cardmarket Decimal
    tcgplayer Decimal
    ebay Decimal
    amazon Decimal
    coolstuffinc Decimal
    timestamp DateTime

    cardId String
    card Card @relation(fields: [cardId], references: [id], onDelete: Cascade)
    @@index([cardId])
}

model CardImages {
    id String @id @default(cuid())
    passcode Int
    imageUrl String
    imageUrlSmall String
    imageUrlCropped String

    cardId String
    card Card @relation(fields: [cardId], references: [id], onDelete: Cascade)
    @@index([cardId])
}